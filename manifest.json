{"cyber-dojo.sh":"rm -f *.class\nCLASSES=.:`ls /junit/*.jar | tr '\\n' ':'`\njavac -Xlint:unchecked -Xlint:deprecation -cp $CLASSES  *.java\nif [ $? -eq 0 ]; then\n  # run test classes even if they are inner classes\n  # remove voluminous stack trace from output\n  java -cp $CLASSES org.junit.runner.JUnitCore `ls -1 *Test*.class | grep -v '\\\\$' | sed 's/\\(.*\\)\\..*/\\1/'` | grep -Ev 'org.junit.runner|org.junit.internal|sun.reflect|org.junit.Assert|java.lang.reflect|org.hamcrest'\nfi\n","output":"Anagram.java:6: error: incompatible types: String cannot be converted to List<String>\n        return \"a\";\n               ^\n1 error\n","instructions":"Write a program to generate all potential \nanagrams of an input string.\n\nFor example, the potential anagrams of \"biro\" are\n\nbiro bior brio broi boir bori\nibro ibor irbo irob iobr iorb\nrbio rboi ribo riob roib robi\nobir obri oibr oirb orbi orib\n","AnagramTest.java":"import org.junit.*;\nimport static org.junit.Assert.*;\n\npublic class AnagramTest {\n\n    @Test\n    public void the_anagram_of_a_one_letter_word_should_be_itself() {\n        Anagram anagram = new Anagram();\n\n        assertTrue(anagram.generate(\"a\").contains(\"a\"));\n    }\n}\n","Anagram.java":"import java.util.List;\n\npublic class Anagram {\n\n    public List<String> generate(String string) {\n        return \"a\";\n    }\n}\n"}